openapi: 3.0.3
info:
  title: Task Manager API
  description: API para gestionar usuarios y tareas, con autenticación JWT.
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: Servidor local

paths:
  /auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        "201":
          description: Usuario registrado exitosamente
        "400":
          description: Error en la solicitud
          
  /auth/login:
    post:
      summary: Autenticar usuario y obtener JWT
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        "200":
          description: Autenticación exitosa, retorna el JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT generado
        "401":
          description: Credenciales incorrectas

  /tasks:
    get:
      summary: Obtener todas las tareas
      tags:
        - Tasks
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de tareas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        "401":
          description: No autorizado

    post:
      summary: Crear una nueva tarea
      tags:
        - Tasks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        "201":
          description: Tarea creada exitosamente
        "401":
          description: No autorizado

  /tasks/{id}:
    get:
      summary: Obtener una tarea por ID
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Detalles de la tarea
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        "404":
          description: Tarea no encontrada

    put:
      summary: Actualizar una tarea existente
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        "200":
          description: Tarea actualizada
        "404":
          description: Tarea no encontrada

    delete:
      summary: Eliminar una tarea por ID
      tags:
        - Tasks
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Tarea eliminada
        "404":
          description: Tarea no encontrada

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          example: "usuario123"
        email:
          type: string
          format: email
          example: "usuario@example.com"
        password:
          type: string
          format: password
          example: "password123"

    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "usuario123"
        password:
          type: string
          format: password
          example: "password123"

    TaskRequest:
      type: object
      properties:
        title:
          type: string
          example: "Hacer compras"
        description:
          type: string
          example: "Comprar pan y leche"

    Task:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Hacer compras"
        description:
          type: string
          example: "Comprar pan y leche"
